// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDynamicForms.Models;

#nullable disable

namespace MyDynamicForms.Migrations
{
    [DbContext(typeof(DbmyFormsContext))]
    [Migration("20240913211309_InitialMigratrionSetup")]
    partial class InitialMigratrionSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyDynamicForms.Models.ControlName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("NameOriginal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name_original");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__control___3213E83F1B02EBB3");

                    b.HasIndex("TypeId");

                    b.ToTable("control_name", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ControlType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__control___3213E83FC93CB3D1");

                    b.ToTable("control_type", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime")
                        .HasColumnName("date_end");

                    b.Property<DateTime?>("DatePublish")
                        .HasColumnType("datetime")
                        .HasColumnName("date_publish");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime")
                        .HasColumnName("date_start");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__form__3213E83F6F8AD4E0");

                    b.HasIndex("UserId");

                    b.ToTable("form", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.FormHasSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<int>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("form_id");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("response");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__form_has__3213E83F9A65E314");

                    b.HasIndex("FormId");

                    b.HasIndex("UserId");

                    b.ToTable("form_has_sections", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<int>("ControlId")
                        .HasColumnType("int")
                        .HasColumnName("control_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<int>("SettingsId")
                        .HasColumnType("int")
                        .HasColumnName("settings_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__generic___3213E83F4235EBAF");

                    b.HasIndex("ControlId");

                    b.HasIndex("SettingsId");

                    b.HasIndex("TypeId");

                    b.ToTable("generic_question", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericQuestionsHasGenericSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("bit")
                        .HasColumnName("mandatory");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__generic___3213E83FD5684D45");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SectionId");

                    b.ToTable("generic_questions_has_generic_sections", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<int>("ControlId")
                        .HasColumnType("int")
                        .HasColumnName("control_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("bit")
                        .HasColumnName("mandatory");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__generic___3213E83F0077A24C");

                    b.HasIndex("ControlId");

                    b.ToTable("generic_section", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ModelHasRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("rol_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__model_ha__3213E83F665F2679");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("model_has_rol", "auth");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<int>("ControlId")
                        .HasColumnType("int")
                        .HasColumnName("control_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<int>("SettingsId")
                        .HasColumnType("int")
                        .HasColumnName("settings_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83F32ADF8F4");

                    b.HasIndex("ControlId");

                    b.HasIndex("SettingsId");

                    b.HasIndex("TypeId");

                    b.ToTable("question", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("settings");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83F7B0843AD");

                    b.ToTable("question_settings", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Subtype")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("subtype");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83F84AE0621");

                    b.ToTable("question_type", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionsHasSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("bit")
                        .HasColumnName("mandatory");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83FAD516223");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SectionId");

                    b.ToTable("questions_has_sections", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__roles__3213E83FE42FC2E2");

                    b.ToTable("roles", "auth");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<int>("ControlId")
                        .HasColumnType("int")
                        .HasColumnName("control_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("bit")
                        .HasColumnName("mandatory");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__section__3213E83F771541E6");

                    b.HasIndex("ControlId");

                    b.ToTable("section", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83FB453B3D9");

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC572D9E4D365")
                        .IsUnique();

                    b.ToTable("users", "auth");
                });

            modelBuilder.Entity("MyDynamicForms.Models.UserHasResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("deleted_by");

                    b.Property<int>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("form_id");

                    b.Property<int>("OrderList")
                        .HasColumnType("int")
                        .HasColumnName("order_list");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK__user_has__3213E83FE27F4276");

                    b.ToTable("user_has_responses", "forms");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ControlName", b =>
                {
                    b.HasOne("MyDynamicForms.Models.ControlType", "Type")
                        .WithMany("ControlNames")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__control_n__delet__656C112C");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Form", b =>
                {
                    b.HasOne("MyDynamicForms.Models.User", "User")
                        .WithMany("Forms")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__form__deleted_by__10566F31");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyDynamicForms.Models.FormHasSection", b =>
                {
                    b.HasOne("MyDynamicForms.Models.Form", "Form")
                        .WithMany("FormHasSections")
                        .HasForeignKey("FormId")
                        .IsRequired()
                        .HasConstraintName("FK__form_has___delet__151B244E");

                    b.HasOne("MyDynamicForms.Models.User", "User")
                        .WithMany("FormHasSections")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__form_has___user___160F4887");

                    b.Navigation("Form");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericQuestion", b =>
                {
                    b.HasOne("MyDynamicForms.Models.ControlName", "Control")
                        .WithMany("GenericQuestions")
                        .HasForeignKey("ControlId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_q__delet__7C4F7684");

                    b.HasOne("MyDynamicForms.Models.QuestionSetting", "Settings")
                        .WithMany("GenericQuestions")
                        .HasForeignKey("SettingsId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_q__setti__7E37BEF6");

                    b.HasOne("MyDynamicForms.Models.QuestionType", "Type")
                        .WithMany("GenericQuestions")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_q__type___7D439ABD");

                    b.Navigation("Control");

                    b.Navigation("Settings");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericQuestionsHasGenericSection", b =>
                {
                    b.HasOne("MyDynamicForms.Models.GenericQuestion", "Question")
                        .WithMany("GenericQuestionsHasGenericSections")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_q__delet__0A9D95DB");

                    b.HasOne("MyDynamicForms.Models.GenericSection", "Section")
                        .WithMany("GenericQuestionsHasGenericSections")
                        .HasForeignKey("SectionId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_q__secti__0B91BA14");

                    b.Navigation("Question");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericSection", b =>
                {
                    b.HasOne("MyDynamicForms.Models.ControlName", "Control")
                        .WithMany("GenericSections")
                        .HasForeignKey("ControlId")
                        .IsRequired()
                        .HasConstraintName("FK__generic_s__delet__70DDC3D8");

                    b.Navigation("Control");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ModelHasRol", b =>
                {
                    b.HasOne("MyDynamicForms.Models.Role", "Rol")
                        .WithMany("ModelHasRols")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK__model_has__rol_i__5535A963");

                    b.HasOne("MyDynamicForms.Models.User", "User")
                        .WithMany("ModelHasRols")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__model_has__delet__5441852A");

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Question", b =>
                {
                    b.HasOne("MyDynamicForms.Models.ControlName", "Control")
                        .WithMany("Questions")
                        .HasForeignKey("ControlId")
                        .IsRequired()
                        .HasConstraintName("FK__question__delete__75A278F5");

                    b.HasOne("MyDynamicForms.Models.QuestionSetting", "Settings")
                        .WithMany("Questions")
                        .HasForeignKey("SettingsId")
                        .IsRequired()
                        .HasConstraintName("FK__question__settin__778AC167");

                    b.HasOne("MyDynamicForms.Models.QuestionType", "Type")
                        .WithMany("Questions")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__question__type_i__76969D2E");

                    b.Navigation("Control");

                    b.Navigation("Settings");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionsHasSection", b =>
                {
                    b.HasOne("MyDynamicForms.Models.Question", "Question")
                        .WithMany("QuestionsHasSections")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__questions__delet__03F0984C");

                    b.HasOne("MyDynamicForms.Models.Section", "Section")
                        .WithMany("QuestionsHasSections")
                        .HasForeignKey("SectionId")
                        .IsRequired()
                        .HasConstraintName("FK__questions__secti__04E4BC85");

                    b.Navigation("Question");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Section", b =>
                {
                    b.HasOne("MyDynamicForms.Models.ControlName", "Control")
                        .WithMany("Sections")
                        .HasForeignKey("ControlId")
                        .IsRequired()
                        .HasConstraintName("FK__section__deleted__6B24EA82");

                    b.Navigation("Control");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ControlName", b =>
                {
                    b.Navigation("GenericQuestions");

                    b.Navigation("GenericSections");

                    b.Navigation("Questions");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.ControlType", b =>
                {
                    b.Navigation("ControlNames");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Form", b =>
                {
                    b.Navigation("FormHasSections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericQuestion", b =>
                {
                    b.Navigation("GenericQuestionsHasGenericSections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.GenericSection", b =>
                {
                    b.Navigation("GenericQuestionsHasGenericSections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Question", b =>
                {
                    b.Navigation("QuestionsHasSections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionSetting", b =>
                {
                    b.Navigation("GenericQuestions");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("MyDynamicForms.Models.QuestionType", b =>
                {
                    b.Navigation("GenericQuestions");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Role", b =>
                {
                    b.Navigation("ModelHasRols");
                });

            modelBuilder.Entity("MyDynamicForms.Models.Section", b =>
                {
                    b.Navigation("QuestionsHasSections");
                });

            modelBuilder.Entity("MyDynamicForms.Models.User", b =>
                {
                    b.Navigation("FormHasSections");

                    b.Navigation("Forms");

                    b.Navigation("ModelHasRols");
                });
#pragma warning restore 612, 618
        }
    }
}
